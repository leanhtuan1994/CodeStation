s:1654:"<p></p><p>A variable provides us with named storage that our programs can manipulate. Each variable in Swift has a specific type, which determines the size and layout of the variable's memory; the range of values that can be stored within that memory; and the set of operations that can be applied to the variable.</p><p>Swift supports the following basic types of variables −</p><ul><li><p><b>Int or UInt</b> − This is used for whole numbers. More specifically, you can use Int32, Int64 to define 32 or 64 bit signed integer, whereas UInt32 or UInt64 to define 32 or 64 bit unsigned integer variables. For example, 42 and -23.</p></li><li><p><b>Float</b> − This is used to represent a 32-bit floating-point number. It is used to hold numbers with smaller decimal points. For example, 3.14159, 0.1, and -273.158.</p></li><li><p><b>Double</b> − This is used to represent a 64-bit floating-point number and used when floating-point values must be very large. For example 3.14159, 0.1, and -273.158.</p></li><li><p><b>Bool</b> − This represents a Boolean value which is either true or false.</p></li><li><p><b>String</b> − This is an ordered collection of characters. For example, "Hello, World!"</p></li><li><p><b>Character</b> − This is a single-character string literal. For example, "C"</p></li></ul><p>Swift also allows to define various other types of variables, which we will cover in subsequent chapters, such as <b>Optional</b>, <b>Array</b>, <b>Dictionaries</b>, <b>Structures</b>, and <b>Classes</b>.</p><p>The following section will cover how to declare and use various types of variables in Swift programming.</p><br />";